table fPedidos
	lineageTag: 842db6fb-d2fb-4da3-bbf0-dd2528f26b8b

	measure '_Numero de pedidos' = ```
			
			//Numero de pedidos
			COUNTROWS(fPedidos)
			
			```
		formatString: #,0.00
		lineageTag: ccaf1689-6f6d-467d-ab42-c287e4e76676

	measure '_Pedidos Atrasados' = ```
			
			// Quantidade de pedidos que nao foram entregues dentro do prazo 
			CALCULATE(
			    [_Numero de pedidos],
			    fPedidos[Status_Atual] = "Atrasado"
			)
			```
		lineageTag: 212e8b8e-5003-40a1-bb07-0a109ea36034

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '_Pedidos No Prazo' = ```
			
			// Quantidade de pedidos que foram entregues dentro do prazo 
			CALCULATE(
			    [_Numero de pedidos],
			    fPedidos[Entrega_Descricao] = "Normal"
			)
			```
		lineageTag: 2f6c7aec-f670-479a-89d6-085d2408e5d8

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '_% No Prazo' = ```
			
			// Verifica o % de pedidos em atraso 
			DIVIDE(
			    [_Pedidos No Prazo] -[_Pedidos Atrasados] ,
			    [_Pedidos No Prazo],
			    0
			)
			```
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: 67fc79d0-85f8-4324-a2e0-ab9970d39834

	measure '_% Atraso' =
			
			// Verifica o % de pedidos no prazo
			DIVIDE(
			    [_Pedidos Atrasados] ,
			    [_Numero de pedidos],
			    0
			)
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: 3e86b95d-9da6-43c9-a2c4-80fdb71fc46b

	measure '_Lucro / Prejuizo' = ```
			
			// Soma lucros e prejuizos das entregas 
			CALCULATE(
			    SUM(fPedidos[Lucro_Prejuizo])
			)
			```
		formatString: "€"\ #,0;-"€"\ #,0;"€"\ #,0
		lineageTag: a6cc346f-13ec-414f-b04c-20ecd4f68dc3

	measure '__Lim min faturamento por cliente' =
			
			MINX(
			    ADDCOLUMNS(
			        SUMMARIZE(
			            dClientes,
			            dClientes[Prioridade_Descricao]
			        )
			        ,"Media de Faturamento por Cliente"
			        ,[_Receita Media por Cliente]
			    )
			    , [Media de Faturamento por Cliente]
			) * (1 - [__espacamento])
		displayFolder: __Configuracoes
		lineageTag: f405db38-6a3a-4eba-bb38-78c82ea78aa0

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '__Lim max faturamento por cliente' =
			
			MAXX(
			    ADDCOLUMNS(
			        SUMMARIZE(
			            dClientes,
			            dClientes[Prioridade_Descricao]
			        )
			        ,"Media de Faturamento por Cliente"
			        ,[_Receita Media por Cliente]
			    )
			    , [Media de Faturamento por Cliente]
			) * (1 + [__espacamento])
		displayFolder: __Configuracoes
		lineageTag: 596d312e-f1bf-48c5-85a0-1a01182c18d3

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '__Lim max pedido por cliente' =
			
			MAXX(
			    ADDCOLUMNS(
			        SUMMARIZE(
			            dClientes,
			            dClientes[Prioridade_Descricao]
			        )
			        ,"Media de pedidos por Cliente"
			        ,[_Media de pedidos por cliente]
			    )
			    , [_Media de pedidos por cliente]
			) * (1 + [__espacamento])
		displayFolder: __Configuracoes
		lineageTag: ea68b9ee-2aa7-455f-8a46-d57e64929628

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '__Lim min pedido por cliente' =
			
			MINX(
			    ADDCOLUMNS(
			        SUMMARIZE(
			            dClientes,
			            dClientes[Prioridade_Descricao]
			        )
			        ,"Media de pedidos por Cliente"
			        ,[_Media de pedidos por cliente]
			    )
			    , [_Media de pedidos por cliente]
			) * (1 - [__espacamento])
		displayFolder: __Configuracoes
		lineageTag: 9f8581cf-8416-4cbc-a7cb-3a34379a2140

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure __espacamento =
			
			0.01
		displayFolder: __Configuracoes
		lineageTag: f85445ef-4015-43da-8c86-2ff3181dda91

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '_Ticket Medio' =
			
			DIVIDE(
			    [_Lucro / Prejuizo],
			    [_Numero de pedidos],
			    0
			)
		lineageTag: 9f50d6b9-9709-477c-bc9e-fd476637339a

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '_Tempo para conclusao' =
			
			
			var vHorasDecimais = [Soma horas Pedido]
			var Vhoras = INT(vHorasDecimais)
			var MinutosDecimais = 60 * (vHorasDecimais - Vhoras)
			var vMinutos = INT( MinutosDecimais)
			var vSegundos = round( 60 * (MinutosDecimais - vMinutos),0)
			var vHH = IF(LEN(Vhoras) = 1, "0" & Vhoras, Vhoras)
			var vMM = IF(LEN(vMinutos) = 1, "0" & vMinutos, vMinutos)
			var vSS = IF(LEN(vSegundos) = 1, "0" & vSegundos, vSegundos)
			var Result = vHH & ":" & vMM & ":" & vSS
			
			RETURN
			
			Vhoras
		lineageTag: fa21c6cd-9c3f-42bd-b320-18e55bfe85a6

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Soma horas Pedido' =
			
			SUM(fPedidos[Total_Horas_Pedido])
		lineageTag: 17368823-55de-4436-8106-28d55405e3d9

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Custo Materia Prima' =
			
			//Custo de materia prima para producao da peca
			CALCULATE(
			    SUMX(
			        fPedidos,
			        fPedidos[Peso_Peca_KG] * RELATED(dMateriais[Custo_Base_KG])
			    )
			)
		lineageTag: d399bb83-0a00-4fc5-a554-4f6415b0e615

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Dias para Entrega' =
			
			// Numero de dias corridos para entrega do pedido
			DATEDIFF(
			    SELECTEDVALUE(fPedidos[Data_Entrada]),
			    SELECTEDVALUE(fPedidos[Data_Conclusao]),
			    DAY
			)
		lineageTag: 72a999ea-03fe-41a2-bfba-2c37837156ee

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '_Pedidos em Producao' =
			
			//Numero de pedidos concluidos
			CALCULATE(
			    [_Numero de pedidos],
			    fPedidos[Status_Atual] = "Em Produção"
			)
		lineageTag: bc468188-b59d-45ba-b231-377e9e4e1314

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '_Pedidos Concluidos' =
			
			//Numero de pedidos concluidos
			CALCULATE(
			    [_Numero de pedidos],
			    fPedidos[Status_Atual] = "Concluído"
			)
		formatString: 0
		lineageTag: 929942a5-d509-4f13-b41f-b18f259196dd

		annotation PBI_FormatHint = {"isDecimal":true}

	measure '_Pedidos Cancelados' =
			
			//Numero de pedidos cancelados
			CALCULATE(
			    [_Numero de pedidos],
			    fPedidos[Status_Atual] = "Cancelado"
			)
		lineageTag: 3443534d-270d-4a2e-9e61-020f88aaeb5b

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure Vendas =
			
			// Somatorio do valor final dos pedidos - Venda Bruta
			CALCULATE(
			    SUM(fPedidos[Valor_Final_Pedido])
			)
		formatString: \$#,0.00;(\$#,0.00);\$#,0.00
		lineageTag: 47dfa974-e250-4559-b6dd-0a19a7f36bc7

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure Lucro =
			
			// Calcula o lucro ou prejuizo de um pedido
			CALCULATE(
			    SUM(fPedidos[Lucro_Prejuizo])
			)
		formatString: \$#,0.00;(\$#,0.00);\$#,0.00
		lineageTag: 3201c540-192a-4e36-b2ee-623c982749da

	measure Custo =
			
			CALCULATE(
			    [Custo Total]
			)
		formatString: \$#,0.00;(\$#,0.00);\$#,0.00
		lineageTag: d72985bc-f4f8-46f9-a816-506cba93ebda

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'Lucro %' =
			
			DIVIDE(
			    [Vendas] - [Lucro],
			    [Lucro],
			    0
			)
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: 185b6e30-ab06-4d94-bb9a-86acf1c45204

	measure 'Venda PM' = ```
			
			// Vendas no mes anterior 
			CALCULATE(
			    [Vendas],
			    DATEADD(dCalendario[Data], -1 , month)
			)
			```
		lineageTag: a793579e-a0e2-49f6-98a4-7b1a45f6cba0

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Vendas PM var' =
			
			IF(
			    [Venda PM] = BLANK(),
			    BLANK(),
			    [Vendas] - [Venda PM]
			)
		lineageTag: 943cab07-2f06-4aef-9674-ba0473ae78f4

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Vendas Sparkline' = ```
			
			VAR LineColour = "#b98aff"
			VAR PointColour = "#b98aff"
			VAR Defs = "" // Sem gradiente
			
			VAR XMin = MIN(dCalendario[MesInicio])
			VAR XMax = MAX(dCalendario[MesInicio])
			VAR YMin = MINX(VALUES(dCalendario[MesInicio]), CALCULATE([Vendas]))
			VAR YMax = MAXX(VALUES(dCalendario[MesInicio]), CALCULATE([Vendas]))
			
			VAR PointsTable = 
			    ADDCOLUMNS(
			        SUMMARIZE(dCalendario, dCalendario[MesInicio]),
			        "X", INT(170 * DIVIDE(dCalendario[MesInicio] - XMin, XMax - XMin)) + 15,
			        "Y", INT(70 * DIVIDE(CALCULATE([Vendas]) - YMin, YMax - YMin))
			    )
			
			VAR PathPoints = 
			    GENERATE(
			        ADDCOLUMNS(PointsTable, "Index", RANKX(ALL(dCalendario[MesInicio]), dCalendario[MesInicio], , ASC)),
			        VAR PrevX = MAXX(FILTER(PointsTable, RANKX(ALL(dCalendario[MesInicio]), dCalendario[MesInicio], , ASC) = [Index]-1), [X])
			        VAR PrevY = MAXX(FILTER(PointsTable, RANKX(ALL(dCalendario[MesInicio]), dCalendario[MesInicio], , ASC) = [Index]-1), [Y])
			        RETURN ROW("Curve", 
			            IF([Index] = 1, 
			                "M " & [X] & " " & 90 - [Y],
			                " C " & PrevX & " " & 90 - PrevY & ", " & [X] & " " & 90 - [Y] & ", " & [X] & " " & 90 - [Y]
			            )
			        )
			    )
			
			VAR PathData = CONCATENATEX(PathPoints, [Curve], " ")
			
			VAR LastX = MAXX(PointsTable, [X])
			VAR LastY = MAXX(FILTER(PointsTable, [X] = LastX), [Y])
			
			VAR SVGImageURL =
			    "data:image/svg+xml;utf8," &
			    "<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 200 100'>" &
			    
			    // Linha curva
			    "<path d='" & PathData & "' fill='none' stroke='" & LineColour & "' stroke-width='2.5' stroke-linecap='round' stroke-linejoin='round' />" &
			    
			    // Ponto final
			    "<circle cx='" & LastX & "' cy='" & 90 - LastY & "' r='5' stroke='" & LineColour & "' stroke-width='2' fill='" & PointColour & "' />" &
			    
			    "</svg>"
			
			RETURN SVGImageURL
			
			
			
			```
		lineageTag: 36c539a0-bd9a-475c-8cc3-e89dfbad683b

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure Variancia = ```
			
			
			var _PeriodoMaximo = MAX(fPedidos[Data_Entrada])
			
			var _InicioMes = 
			CALCULATE(
			    MIN(dCalendario[MesInicio]),
			    dCalendario[Data] = _PeriodoMaximo
			)
			
			var _VendaUltimoMes = 
			CALCULATE(
			    [Vendas],
			    REMOVEFILTERS(dCalendario),
			    DATESBETWEEN(
			        dCalendario[Data],
			        EOMONTH( _InicioMes, -3) +1,
			        EOMONTH(_InicioMes, -2)
			    )
			)
			
			var _VendaMesAtual = 
			CALCULATE(
			    [Vendas],
			    REMOVEFILTERS(dCalendario),
			    DATESBETWEEN(
			        dCalendario[Data],
			        EOMONTH( _InicioMes, -2) +1,
			        EOMONTH(_InicioMes,-1)
			    )
			)
			
			var result = 
			IF(
			    _VendaUltimoMes > 0, 
			    (_VendaMesAtual - _VendaUltimoMes) / _VendaUltimoMes,
			    BLANK()
			)
			
			RETURN
			result
			```
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: 194a719d-7208-4929-aa34-b6c32555f2f2

	measure 'Variancia Meses' = ```
			
			
			var _PeriodoMaximo = MAX(fPedidos[Data_Entrada])
			
			var _InicioMes = 
			CALCULATE(
			    MIN(dCalendario[MesInicio]),
			    dCalendario[Data] = _PeriodoMaximo
			)
			
			var _VendaUltimoMes = 
			CALCULATE(
			    MAX(dCalendario[Data]),
			    REMOVEFILTERS(dCalendario),
			    DATESBETWEEN(
			        dCalendario[Data],
			        EOMONTH( _InicioMes, -3) +1,
			        EOMONTH(_InicioMes, -2)
			    )
			)
			
			var _VendaMesAtual = 
			CALCULATE(
			    MAX(dCalendario[Data]),
			    REMOVEFILTERS(dCalendario),
			    DATESBETWEEN(
			        dCalendario[Data],
			        EOMONTH( _InicioMes, -2) +1,
			        EOMONTH(_InicioMes,-1)
			    )
			)
			
			var result = 
			"MoM% | " & FORMAT( _VendaMesAtual, "mmm YY") & " vs. " & FORMAT(_VendaUltimoMes, "mmm YY")
			
			RETURN
			
			result
			```
		lineageTag: 49a11325-2c1e-4a31-a41b-71751b12a872

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Pontos Vendas' = ```
			
			
			VAR tabela = 
			    ADDCOLUMNS(
			        SUMMARIZE(
			            ALL(dCalendario[MesInicio]), 
			            dCalendario[MesInicio]
			        ),
			        "Pedidos", [_Numero de pedidos]
			    )
			
			VAR _maiorNumero = 
			    MAXX(tabela, [Pedidos])
			
			VAR _menorNumero = 
			    MINX(tabela, [Pedidos])
			
			VAR result = 
			    SWITCH(
			        TRUE(),
			        [_Numero de pedidos] = _maiorNumero, "Green",
			        [_Numero de pedidos] = _menorNumero, "Red",
			        "#FFFFFF00"  
			    )
			
			RETURN 
			result
			```
		displayFolder: __Configuracoes
		lineageTag: e597ea47-73ff-43e1-81c1-1f16e9d6800d

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Pontos Lucros' = ```
			
			
			VAR tabela = 
			    ADDCOLUMNS(
			        SUMMARIZE(
			            ALL(dCalendario[MesInicio]),
			            dCalendario[MesInicio]
			        ),
			        "Lucros", [Lucro]
			    )
			
			VAR _maiorNumero = 
			    MAXX(tabela, [Lucro])
			
			VAR _menorNumero = 
			    MINX(tabela, [Lucro])
			
			VAR result = 
			    SWITCH(
			        TRUE(),
			        [Lucro] = _maiorNumero, "Green",
			        [Lucro] = _menorNumero, "Red",
			        "#FFFFFF00" 
			    )
			
			RETURN 
			result
			```
		displayFolder: __Configuracoes
		lineageTag: eef556f0-47d3-41d9-98f3-e176608800cb

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Pontos Custo' = ```
			
			
			VAR tabela = 
			    ADDCOLUMNS(
			        SUMMARIZE(
			            ALL(dCalendario[MesInicio]),  
			            dCalendario[MesInicio]
			        ),
			        "Pedidos", [Custo]
			    )
			
			VAR _maiorNumero = 
			    MAXX(tabela, [Custo])
			
			VAR _menorNumero = 
			    MINX(tabela, [Custo])
			
			VAR result = 
			    SWITCH(
			        TRUE(),
			        [Custo] = _maiorNumero, "Green",
			        [Custo] = _menorNumero, "Red",
			        "#FFFFFF00" 
			    )
			
			RETURN 
			result
			```
		displayFolder: __Configuracoes
		lineageTag: 48123338-7942-4aa9-a95e-5e75c7eb5937

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Pontos Lucro %' = ```
			
			
			VAR tabela = 
			    ADDCOLUMNS(
			        SUMMARIZE(
			            ALL(dCalendario[MesInicio]),  
			            dCalendario[MesInicio]
			        ),
			        "Pedidos", [Lucro %]
			    )
			
			VAR _maiorNumero = 
			    MAXX(tabela, [Lucro %])
			
			VAR _menorNumero = 
			    MINX(tabela, [Lucro %])
			
			VAR result = 
			    SWITCH(
			        TRUE(),
			        [Lucro %] = _maiorNumero, "Green",
			        [Lucro %] = _menorNumero, "Red",
			        "#FFFFFF00" 
			    )
			
			RETURN 
			result
			```
		displayFolder: __Configuracoes
		lineageTag: 96f0e0b5-db7b-42f0-86a9-e0d3ef4139f3

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '__Pontos Pedidos' = ```
			
			// Mostar maior e menor numero de pedidos no grafico
			VAR tabela = 
			    ADDCOLUMNS(
			        SUMMARIZE(
			            ALL(dCalendario[MesInicio]),
			            dCalendario[MesInicio]
			        ),
			        "Lucros", [_Numero de pedidos]
			    )
			
			VAR _maiorNumero = 
			    MAXX(tabela, [_Numero de pedidos])
			
			VAR _menorNumero = 
			    MINX(tabela, [_Numero de pedidos])
			
			VAR result = 
			    SWITCH(
			        TRUE(),
			        [_Numero de pedidos] = _maiorNumero, "Green",
			        [_Numero de pedidos] = _menorNumero, "Red",
			        "#FFFFFF00" 
			    )
			
			RETURN 
			result
			```
		displayFolder: __Configuracoes
		lineageTag: 5cfae549-7b2c-4e9e-a5f3-e58c0226c012

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Lucro test' = ```
			
			[Vendas] - [Custo Total] 
			```
		formatString: 0
		lineageTag: 99a7ea81-7773-4459-8686-dbba7b7c37f9

		annotation PBI_FormatHint = {"isDecimal":true}

	column ID_Pedido
		dataType: string
		lineageTag: bc7979c5-328f-44c6-af92-0da2b5691f94
		summarizeBy: none
		sourceColumn: ID_Pedido

		annotation SummarizationSetBy = Automatic

	column ID_Cliente
		dataType: int64
		formatString: 0
		lineageTag: cf21435a-8415-4b89-a40a-893813e5920a
		summarizeBy: none
		sourceColumn: ID_Cliente

		annotation SummarizationSetBy = Automatic

	column Data_Hora_Entrada
		dataType: dateTime
		formatString: General Date
		lineageTag: 7f0ff214-4f1b-450f-9a66-57e352895659
		summarizeBy: none
		sourceColumn: Data_Hora_Entrada

		variation Variation
			isDefault
			relationship: ed421bcd-bfb5-4578-a438-dec6b3abac8c
			defaultHierarchy: LocalDateTable_d74b47bf-f11f-40ac-b21d-aa927812d7e6.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

	column Tipo_Pedido
		dataType: string
		lineageTag: 271a7275-20ca-4fab-9138-29d9783b094d
		summarizeBy: none
		sourceColumn: Tipo_Pedido

		annotation SummarizationSetBy = Automatic

	column ID_Material
		dataType: int64
		formatString: 0
		lineageTag: 31fc4c9b-0814-4242-8937-8ce1d94e3d89
		summarizeBy: none
		sourceColumn: ID_Material

		annotation SummarizationSetBy = Automatic

	column Peso_Peca_KG
		dataType: double
		lineageTag: 5f8c8a6b-7cd2-45f3-992b-6aee923db786
		summarizeBy: sum
		sourceColumn: Peso_Peca_KG

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column Complexidade_Peca
		dataType: int64
		formatString: 0
		lineageTag: 34c662e3-5c8c-4e02-8d15-4c9e5faafca7
		summarizeBy: sum
		sourceColumn: Complexidade_Peca

		annotation SummarizationSetBy = Automatic

	column Prioridade_Interna
		dataType: int64
		formatString: 0
		lineageTag: 7e6db639-4c25-4f96-aa84-0cab23319b8b
		summarizeBy: sum
		sourceColumn: Prioridade_Interna

		annotation SummarizationSetBy = Automatic

	column SLA
		dataType: string
		lineageTag: 5495ce5b-c0b3-4fcb-b5ab-24e75d2694b2
		summarizeBy: none
		sourceColumn: SLA

		annotation SummarizationSetBy = Automatic

	column Status_Atual
		dataType: string
		lineageTag: 1ccc0060-80a7-4491-9c84-7b48368b2cf3
		summarizeBy: none
		sourceColumn: Status_Atual

		annotation SummarizationSetBy = Automatic

	column Data_Hora_Prazo_Cliente
		dataType: dateTime
		formatString: General Date
		lineageTag: ebb80b56-4e03-42c8-a2dd-40e797c2048e
		summarizeBy: none
		sourceColumn: Data_Hora_Prazo_Cliente

		variation Variation
			isDefault
			relationship: 8c88275a-62dc-402e-a311-8e87479288e4
			defaultHierarchy: LocalDateTable_41bd9216-15e4-4ed4-a5bf-84bdc3e9b8fd.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

	column Valor_Final_Pedido
		dataType: double
		isHidden
		lineageTag: a5453105-8407-4538-a767-3b4abddef3cf
		summarizeBy: sum
		sourceColumn: Valor_Final_Pedido

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column Lucro_Prejuizo
		dataType: double
		lineageTag: 4a53b0e2-6a26-4549-87e9-176fa0f3e010
		summarizeBy: sum
		sourceColumn: Lucro_Prejuizo

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column Complexidade_Peca_Descricao
		dataType: string
		lineageTag: 371882b5-67a3-4aed-88fe-f0107bae19b4
		summarizeBy: none
		sourceColumn: Complexidade_Peca_Descricao

		annotation SummarizationSetBy = Automatic

	column Prioridade_Interna_Descricao
		dataType: string
		lineageTag: a313e3cb-12f3-434b-befb-117518f6b9a6
		summarizeBy: none
		sourceColumn: Prioridade_Interna_Descricao

		annotation SummarizationSetBy = Automatic

	column Entrega
		dataType: string
		lineageTag: 97acde70-452f-489d-82de-2c0c437a5dcc
		summarizeBy: none
		sourceColumn: Entrega

		annotation SummarizationSetBy = Automatic

	column Lucro_ou_Prejuizo
		dataType: string
		lineageTag: 90d244b5-4a6b-4c91-a1de-0ca14377d148
		summarizeBy: none
		sourceColumn: Lucro_ou_Prejuizo

		annotation SummarizationSetBy = Automatic

	column Entrega_Descricao
		dataType: string
		lineageTag: 8abd148a-635b-499d-996b-ce5c12d060f9
		summarizeBy: none
		sourceColumn: Entrega_Descricao

		annotation SummarizationSetBy = Automatic

	column Lucro_ou_Prejuizo_Descricao
		dataType: string
		lineageTag: bd3146f5-3501-4200-88c6-826d6fae55c6
		summarizeBy: none
		sourceColumn: Lucro_ou_Prejuizo_Descricao

		annotation SummarizationSetBy = Automatic

	column Data_Entrada
		dataType: dateTime
		formatString: Long Date
		lineageTag: d10f5ed7-51c1-42c3-8a51-c25d1b8042a6
		summarizeBy: none
		sourceColumn: Data_Entrada

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column Data_Prazo_Cliente
		dataType: dateTime
		formatString: Long Date
		lineageTag: 3c6a3b34-16b8-4f5d-8d2e-d6decf20e99c
		summarizeBy: none
		sourceColumn: Data_Prazo_Cliente

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column Data_Conclusao
		dataType: dateTime
		formatString: Long Date
		lineageTag: e2a3d7ba-9d48-4dd2-90cf-2998f65c3aaa
		summarizeBy: none
		sourceColumn: Data_Conclusao

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column Total_Horas_Pedido
		dataType: double
		lineageTag: ff91ddc0-dad3-4f0e-97e9-5310af93f4c7
		summarizeBy: sum
		sourceColumn: Total_Horas_Pedido

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column Data_Hora_Conclusao
		dataType: dateTime
		formatString: General Date
		lineageTag: 3ff5f51b-e67c-4a92-bd50-5fe34210fa94
		summarizeBy: none
		sourceColumn: Data_Hora_Conclusao

		variation Variation
			isDefault
			relationship: 49803049-2974-4131-885a-275be71ba836
			defaultHierarchy: LocalDateTable_d4238d56-369a-46b6-825d-116c0f492a00.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

	partition fPedidos = m
		mode: import
		queryGroup: Fatos
		source = ```
				let
				    Source = Excel.Workbook(File.Contents("D:\Cursos\Curso PBI\MBA\Desafio 1\Assets\Source\bases_modulo_produtivo.xlsx"), null, true){[Item="Pedidos",Kind="Sheet"]}[Data],
				    PromoverCabecalho = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),
				
				    // Agrupamento de descricao para complexidade
				    AdicionarComplexidadeDescricao = 
				        Table.AddColumn(
				            PromoverCabecalho, "Complexidade_Peca_Descricao", 
				            each if [Complexidade_Peca] = 5 then "Alta Complexidade" 
				            else if [Complexidade_Peca] >= 3 then "Media Complexidade" 
				            else if [Complexidade_Peca] >= 1 then "Baixa Complexidade" 
				            else "Check"
				    ),
				
				    // Agrupamento de descricao para prioridade
				    AdicionarPrioridadeDescricao = 
				        Table.AddColumn(
				            AdicionarComplexidadeDescricao, "Prioridade_Interna_Descricao", 
				            each if [Prioridade_Interna] = 5 then "Alta Prioridade" 
				            else if [Prioridade_Interna] >= 3 then "Media Prioridade" 
				            else if [Prioridade_Interna] >= 1 then "Baixa Prioridade" 
				            else "Check"
				    ),
				    
				    // Entrega entre Normal e Atrasado
				    AdicionarEntrega = 
				        Table.AddColumn(
				            AdicionarPrioridadeDescricao, 
				            "Entrega", 
				            each 
				                if [Status_Atual] = "Cancelado" then null
				                else if [Data_Conclusao] = null or DateTime.Date([Data_Conclusao]) > DateTime.Date([Prazo_Cliente]) then  "Atrasado"
				                else 
				                    Text.BeforeDelimiter([Status_Financeiro], " ("),
				            type text
				    ),
				    // Correcao para a coluna Lucro ou Prejuizo
				    AdicionrLucroPrejuizo = 
				        Table.AddColumn(AdicionarEntrega, "Lucro_ou_Prejuizo",
				        each 
				        if [Data_Conclusao] = null then null
				        else if [Entrega] = null then null
				        else if [Entrega] = "Atrasado" then
				            let 
				                diasAtraso = Duration.Days(DateTime.Date(DateTime.Date([Data_Conclusao])) - DateTime.Date([Prazo_Cliente]))
				            in
				                if diasAtraso <= 20 then "15% Lucro"
				                else if diasAtraso <= 50 then "3% Lucro"
				                else "Prejuízo 7-20%"
				        else
				            Text.BetweenDelimiters([Status_Financeiro], "(", ")")
				        ,type text
				    ),
				    // Agrupamento de entrada Atrasada ou Normal
				    AdicionarEntregaDescricao= 
				        Table.AddColumn(AdicionrLucroPrejuizo, "Entrega_Descricao", 
				        each if [Entrega] = "Sem atraso" then "Normal" 
				        else "Atrasada"
				    ),
				
				    // Se for nulo e tiver em producao, mantenha nulo, se tivr atrasado, colocar data de atual, caso contrario mantem como está
				    SubstituirNulos = 
				        Table.AddColumn(
				            AdicionarEntregaDescricao,
				            "Data_Conclusao_Corrigida",
				            each 
				                if [Data_Conclusao] <> null then [Data_Conclusao]
				                else if [Status_Atual] = "Atrasado" then DateTime.LocalNow()
				                else if [Status_Atual] = "Em Produção" then null
				                else null,
				            type datetime
				        ),
				        
				    RemoverOriginalDataConclusao = Table.RemoveColumns(SubstituirNulos, {"Data_Conclusao"}),
				    RenomearDataCorrigida = Table.RenameColumns(RemoverOriginalDataConclusao, {{"Data_Conclusao_Corrigida", "Data_Conclusao"}}),
				
				
				    //Agrupamento Lucro ou Prejuizo    
				    AdicionarLucroPrejuizoDescricao = 
				        Table.AddColumn(RenomearDataCorrigida, "Lucro_ou_Prejuizo_Descricao", 
				        each if [Lucro_ou_Prejuizo] = null then null 
				        else if Text.Contains([Lucro_ou_Prejuizo], "Lucro") then "Venda Lucrativa" 
				        else "Prejuízo"
				    ),
				    InserirDataEntrada = 
				        Table.AddColumn(AdicionarLucroPrejuizoDescricao, "Data_Entrada.1", each DateTime.Date([Data_Entrada]), type date),
				
				    RemoveColunasStatusFinanceiro = 
				        Table.RemoveColumns(InserirDataEntrada,{"Status_Financeiro"}),
				
				    InserirDataPrazoCliente = 
				        Table.AddColumn(RemoveColunasStatusFinanceiro, "Data_Prazo_Cliente", each DateTime.Date([Prazo_Cliente]), type date),
				
				    InserirDataConclusao = 
				        Table.AddColumn(InserirDataPrazoCliente, "Data_Conclusao.1", each DateTime.Date([Data_Conclusao]), type date),
				
				    RenomearColunas = Table.RenameColumns(InserirDataConclusao,{{"Data_Entrada", "Data_Hora_Entrada"}, {"Data_Entrada.1", "Data_Entrada"}, {"Peso_KG", "Peso_Peca_KG"}, {"Prazo_Cliente", "Data_Hora_Prazo_Cliente"}, {"Data_Conclusao", "Data_Hora_Conclusao"}, {"Data_Conclusao.1", "Data_Conclusao"}, {"Valor_Final", "Valor_Final_Pedido"}}),
				    
				    Subtracao = Table.AddColumn(RenomearColunas,"Total_Horas_Pedido", each [Data_Hora_Conclusao] - [Data_Hora_Entrada], type duration),
				
				    TotalHoras = Table.TransformColumns(Subtracao,{{"Total_Horas_Pedido", Duration.TotalHours, type number}}),
				    #"Changed Type" = Table.TransformColumnTypes(TotalHoras,{{"ID_Pedido", type text}, {"ID_Cliente", Int64.Type}, {"Data_Hora_Entrada", type datetime}, {"Tipo_Pedido", type text}, {"ID_Material", Int64.Type}, {"Peso_Peca_KG", type number}, {"Complexidade_Peca", Int64.Type}, {"Prioridade_Interna", Int64.Type}, {"SLA", type text}, {"Status_Atual", type text}, {"Data_Hora_Prazo_Cliente", type datetime}, {"Valor_Final_Pedido", type number}, {"Lucro_Prejuizo", type number}, {"Complexidade_Peca_Descricao", type text}, {"Prioridade_Interna_Descricao", type text}, {"Entrega", type text}, {"Entrega_Descricao", type text}, {"Data_Hora_Conclusao", type datetime}, {"Lucro_ou_Prejuizo_Descricao", type text}})
				in
				    #"Changed Type"
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

